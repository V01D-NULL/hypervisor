CC_SRC = $(shell find ./src -type f -name '*.cpp')
C_SRC  = $(shell find ./src -type f -name '*.c')
AS_SRC = $(shell find ./src -type f -name '*.asm')
OBJECT = $(CC_SRC:.cpp=.o) $(AS_SRC:.asm=.o) $(C_SRC:.c=.o)

CC = clang++
CC_FLAGS = \
	-target x86_64-unknown-elf \
    -std=c++17             \
    -ffreestanding -g -O2  \
    -c -I limine/ -I inc/  \
    -I src/ports/          \
    -ffreestanding         \
    -fno-stack-protector   \
    -fno-stack-check       \
    -fno-pie               \
    -fno-pic               \
    -m64                   \
    -mno-80387             \
    -mno-mmx               \
    -mno-sse               \
    -mno-sse2              \
    -mno-red-zone          \
    -mcmodel=kernel        \
    -fno-exceptions        \
    -fno-rtti

C_FLAGS = \
    -std=gnu11             \
    -ffreestanding -g -O2  \
    -c -I limine/ -I inc/  \
    -ffreestanding         \
    -fno-stack-protector   \
    -fno-stack-check       \
    -fno-pie               \
    -fno-pic               \
    -m64                   \
    -march=x86-64          \
    -mabi=sysv             \
    -mno-80387             \
    -mno-mmx               \
    -mno-sse               \
    -mno-sse2              \
    -mno-red-zone          \
    -mcmodel=kernel

AS = nasm
AS_FLAGS = -felf64 -g -F dwarf

LD = ld.lld
LD_FLAGS = \
    -nostdlib -T src/hypervisor.ld \
    -static                        \
    -z max-page-size=0x1000        \

QEMU = qemu-system-x86_64
QEMUFLAGS = -m 4G -enable-kvm -cpu qemu64 -debugcon stdio -M q35 -no-reboot -no-shutdown -cdrom
QEMUFLAGS_DEBUG = -d int -M smm=off -m 1G -cpu qemu64 -debugcon stdio -M q35 -no-reboot -no-shutdown -cdrom

ISO = hypervisor-x86_64.iso
ELF = hypervisor-x86_64.elf